# This patch resolves build issues on Fedora 24 which uses GCC 6.1.
# It was taken from git diff in upstream vendor repo:
# https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=commit;f=gas/config/tc-i386.c;h=a28def75916fb4fa8280404f8c023adc0773162d
#
# Additionally, this was also patched in minigw by Fedora:
# http://pkgs.fedoraproject.org/cgit/rpms/mingw-binutils.git/commit/?h=f24&id=766ff1432ede287cff4cc6ba6286c4cd61a587e3
#
# Patch added by Rick Sherman <shermdog@puppet.com>
--- a/gas/config/tc-i386.c
+++ b/gas/config/tc-i386.c
@@ -4218,6 +4218,8 @@ optimize_imm (void)
 		i.op[op].imms->X_add_number =
 		  (((i.op[op].imms->X_add_number & 0xffff) ^ 0x8000) - 0x8000);
 	      }
+#ifdef BFD64
+	    /* Store 32-bit immediate in 64-bit for 64-bit BFD.  */
 	    if ((i.types[op].bitfield.imm32)
 		&& ((i.op[op].imms->X_add_number & ~(((offsetT) 2 << 31) - 1))
 		    == 0))
@@ -4226,6 +4228,7 @@ optimize_imm (void)
 						^ ((offsetT) 1 << 31))
 					       - ((offsetT) 1 << 31));
 	      }
+#endif
 	    i.types[op]
 	      = operand_type_or (i.types[op],
 				 smallest_imm_type (i.op[op].imms->X_add_number));
@@ -4306,6 +4309,8 @@ optimize_disp (void)
 		op_disp = (((op_disp & 0xffff) ^ 0x8000) - 0x8000);
 		i.types[op].bitfield.disp64 = 0;
 	      }
+#ifdef BFD64
+	    /* Optimize 64-bit displacement to 32-bit for 64-bit BFD.  */
 	    if (i.types[op].bitfield.disp32
 		&& (op_disp & ~(((offsetT) 2 << 31) - 1)) == 0)
 	      {
@@ -4316,6 +4321,7 @@ optimize_disp (void)
 		op_disp = (op_disp ^ ((offsetT) 1 << 31)) - ((addressT) 1 << 31);
 		i.types[op].bitfield.disp64 = 0;
 	      }
+#endif
 	    if (!op_disp && i.types[op].bitfield.baseindex)
 	      {
 		i.types[op].bitfield.disp8 = 0;

